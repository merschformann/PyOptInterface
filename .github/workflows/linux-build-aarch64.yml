name: linux-build-aarch64

on:
    pull_request:
    push:
        # TODO: for testing purposes, we run this workflow on all branches
        # branches:
        #     - master

jobs:
    linux_build:
        runs-on: ubuntu-20.04

        # Only allow one build at a time otherwise we can run out of licenses
        concurrency:
            group: linux_build

        strategy:
            fail-fast: true
            matrix:
                python-image: ["python:3.8-bookworm", "python:3.11-bookworm"]

        container:
            image: ${{ matrix.python-image }}

        steps:
            - uses: ./.github/actions/setup_optimizers_linux
              with:
                  GUROBI_WLS: ${{ secrets.GUROBI_WLS }}
                  COPT_CLIENT_INI: ${{ secrets.COPT_CLIENT_INI }}
                  MOSEK_LICENSE: ${{ secrets.MOSEK_LICENSE }}
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  CHECK_LICENSE: true

            - name: Install python deps
              run: |
                  python -m pip install pytest numpy highsbox llvmlite tccbox

            - name: Build
              # We need to use gcc-10 to support c++ concepts
              env:
                  CC: gcc-10
                  CXX: g++-10
              run: |
                  python -m pip list
                  python -m pip install nanobind scikit-build-core[pyproject]
                  python -m pip install --no-build-isolation -v .
                  python -c "import pyoptinterface as poi; print(dir(poi))"
                  python -m pip wheel -w dist --no-build-isolation .

            - name: Test
              run: |
                  python -m pytest tests -v

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: pyoptinterface-wheel-${{ runner.os }}-${{ runner.arch }}-${{ matrix.python-version }}
                  path: dist/
