name: cibuildwheel

on:
  workflow_dispatch:
    inputs:
      publish:
        description: 'Publish wheels to PyPI: (testpypi/pypi/none)'
        required: false
        type: choice
        options:
          - testpypi
          - pypi
          - none
        default: none
          

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-2019, macos-12, macos-14]

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        if: matrix.os == 'ubuntu-latest'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Build wheels (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: pypa/cibuildwheel@v2.19.2
        env:
          # Select wheels
          CIBW_SKIP: "cp36-* cp37-* pp*"
          CIBW_TEST_COMMAND: "python -c \"import pyoptinterface as poi; print(dir(poi))\""
        with:
          package-dir: .
          output-dir: wheelhouse
          config-file: "{package}/pyproject.toml"

      - name: Build wheels (non Linux)
        if: matrix.os != 'ubuntu-latest'
        uses: pypa/cibuildwheel@v2.19.2
        env:
          # Select wheels
          CIBW_BUILD: "*-win_amd64 *-macosx_x86_64 *-macosx_arm64"
          CIBW_SKIP: "cp36-* cp37-* pp* cp38-macosx_arm64"
          CIBW_ARCHS: "native"
          CIBW_ENVIRONMENT_MACOS: >
            MACOSX_DEPLOYMENT_TARGET=10.14
          CIBW_TEST_COMMAND: "python -c \"import pyoptinterface as poi; print(dir(poi))\""
        with:
          package-dir: .
          output-dir: wheelhouse
          config-file: "{package}/pyproject.toml"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ runner.os }}-${{ runner.arch }}
          path: ./wheelhouse/*.whl

  publish-to-testpypi:
    name: Publish Python wheels to TestPyPI
    needs:
    - build_wheels
    runs-on: ubuntu-latest
    if: github.event.inputs.publish == 'testpypi'

    environment:
      name: testpypi
      url: https://test.pypi.org/p/pyoptinterface

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        pattern: cibw-wheels-*
        merge-multiple: true
        path: dist/
    - name: List all the dists
      run: ls -l dist/
    - name: Publish distribution ðŸ“¦ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    name: Publish Python wheels to PyPI
    needs:
    - build_wheels
    runs-on: ubuntu-latest
    if: github.event.inputs.publish == 'pypi'

    environment:
      name: pypi
      url: https://pypi.org/project/pyoptinterface/

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        pattern: cibw-wheels-*
        merge-multiple: true
        path: dist/
    - name: List all the dists
      run: ls -l dist/
    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://upload.pypi.org/legacy/